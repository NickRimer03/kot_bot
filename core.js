const Discord = require("discord.js");
const Config = require("./config.json");
const Request = require("request");

const Client = new Discord.Client();

const phrases = [
  ["–ë–µ—Å—Å–ø–æ—Ä–Ω–æ", "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ", "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º"],
  ["–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è ‚Äî ¬´–¥–∞¬ª", "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ", "–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã", "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª", "–î–∞"],
  ["–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å", "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å"],
  ["–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π", "–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ", "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"]
];
const hearts = ["üíô", "üíö", "üíõ", "‚ù§"];

function getRandom (max, min = 0) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

Client.on("ready", () => {
  console.log("Kot is ready to meow!");
});

Client.on("message", (message) => {
  const Author = message.author;
  const Channel = message.channel;
  let Protected = false;

  if (message.content.trim() == "kot" && !Author.bot)
    Channel.send(`${Author}: –ß—ë —Ö–æ—Ç–µ–ª?`);

  if (!message.content.startsWith(Config.prefix) || Author.bot)
    return

  const args = message.content.slice(Config.prefix.length).trim().split(/ +/g);
  const cmd = args.shift().toLowerCase();

  // PROTECTED COMMANDS
  if (Author.id == Config.ownerID) {
    switch (cmd) {
      case "c":
      case "clr":
      case "clean":
      case "clear":
        Channel.bulkDelete(100).then(() => {
          Channel.send("–ü–æ—á–∏—Å—Ç–∏–ª –ª–æ—Ç–æ–∫.");
          console.log("-- cat litter box cleaned --");
        });
        Protected = true;
        break;
    }
  }
  if (Protected)
    return

  // COMMON COMMANDS
  switch (cmd) {
    case "help":
      Channel.send(`
\`kot help\` -- displays all of the help commands
\`kot ping\` -- reply with pong!
\`kot pong\` -- reply with ping!
\`kot echo <text>\` -- reply back with <text>
\`kot meow\` \`(aliases: m, it)\` -- show random cat
\`kot d20\` -- rolls d20 dice
\`kot ball8 <question>\` \`(aliases: b8)\` -- gives you an answer with magic ball
\`kot clean\` \`(aliases: c, clr, clear)\` -- deletes last 100 messages \`(protected command)\`
      `);
      console.log("-- HELP! --");
      break;

    case "ping":
      Channel.send("pong!");
      console.log("-- ping? pong! --");
      break;

    case "pong":
      Channel.send("ping!");
      console.log("-- pong? ping! --");
      break;

    case "m":
    case "it":
    case "meow":
      Request({ url: "http://aws.random.cat/meow", json: true }, (error, response, body) => {
        Channel.send(body);
        console.log("-- cat showed --");
      });
      break;

    case "echo":
      Channel.bulkDelete(1).then(() => {
        Channel.send(args.join(" "));
        console.log(`-- echo: ${args.join(" ")} --`);
      });
      break;

    case "d20":
      const d20 = getRandom(20, 1);
      Channel.send(d20);
      console.log(`-- d20 roll: ${d20} --`);
      break;

    case "b8":
    case "ball8":
      const question = args.join(" ").trim();
      const sign = question.match(/\?+$/);
      if (args.length == 0 || sign == null || sign[0].length == question.length) {
        Channel.send(`${Author}: –ê –≥–¥–µ, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –≤–æ–ø—Ä–æ—Å?`);
        console.log(`-- question: ${question}, sign: ${sign} == no question --`);
      } else {
        const heart = getRandom(3);
        const answer = `${Author}: ${hearts[heart]} ${phrases[heart][getRandom(4)]}`;
        Channel.send(answer);
        console.log(`-- ${question} ${answer} --`);
      }
      break;

    // PROTECTED COMMAND TRYING
    case "c":
    case "clr":
    case "clean":
    case "clear":
      Channel.send(`${Author}: —Ä—É–∫–∏ –ø—Ä–æ—á—å –æ—Ç –º–æ–µ–π —Å–º–µ—Ç–∞–Ω–∫–∏!`);
      console.log("-- sour cream was in danger --");
      break;

    // UNKNOWN COMMAND
    default:
      Channel.send(`${Author}: –æ—Ç—Å—Ç–∞–Ω—å, –Ω–µ –º–µ—à–∞–π —Ä–∞–±–æ—Ç–∞—Ç—å!`);
      console.log(`-- unknown command: ${cmd}, arguments: ${args} --`);
  }
});

Client.login(Config.token);
